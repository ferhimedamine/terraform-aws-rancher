---
systemd:
  units:
    - name: docker.service
      enable: true
    - name: locksmithd.service
      mask: true
    - name: format-ebs.service
      enable: true
      contents: |
        [Unit]
        Description=Formats the ebs device
        After=sysinit.target
        Requires=sysinit.target
        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/opt/bin/format-ebs.sh
        [Install]
        WantedBy=multi-user.target
    - name: var-lib-rancher.mount
      enable: true
      contents: |
        [Unit]
        Description=Mount the drive to /var/lib/rancher
        Requires=format-ebs.service
        After=format-ebs.service
        [Mount]
        What=/dev/disk/by-label/rancher
        Where=/var/lib/rancher
        Type=ext4
        [Install]
        WantedBy=multi-user.target
    - name: rancher.service
      enable: true
      contents: |
        [Unit]
        Description=init rancher 2.0
        After=docker.service var-lib-rancher.mount
        Requires=docker.service var-lib-rancher.mount
        [Service]
        StartLimitInterval=0
        ExecStartPre=/usr/bin/docker pull rancher/rancher:v2.0.8
        ExecStart=/usr/bin/docker run --rm --name rancher  \
                                      -v /var/lib/rancher:/var/lib/rancher \
                                      -v /var/lib/rancher/auditlog:/var/lib/rancher/auditlog \
                                      -e AUDIT_LEVEL=1 \
                                      -e AUDIT_LOG_PATH=/var/lib/rancher/auditlog/rancher-api-audit.log \
                                      -e AUDIT_LOG_MAXAGE=10 \
                                      -e AUDIT_LOG_MAXBACKUP=10 \
                                      -e AUDIT_LOG_MAXSIZE=100 \
                                      rancher/rancher:v2.0.8 --no-cacerts
        ExecStop=/usr/bin/docker stop rancher
        Restart=always
        RestartSec=10
        Type=simple
        [Install]
        WantedBy=multi-user.target
    - name: letsencrypt.service
      enable: true
      contents: |
        [Unit]
        Description=lets encrypt
        After=docker.service
        Requires=docker.service
        [Service]
        StartLimitInterval=0
        ExecStartPre=/usr/bin/docker pull certbot/dns-route53
        ExecStart=/usr/bin/docker run --rm --name letsencrypt \
                                      -v "/root/letsencrypt/log:/var/log/letsencrypt" \
                                      -v "/etc/letsencrypt:/etc/letsencrypt" \
                                      -v "/root/letsencrypt/lib:/var/lib/letsencrypt" \
                                      certbot/dns-route53 \
                                      certonly -m cloud.build@totvs.com.br \
                                      --agree-tos \
                                      --dns-route53 \
                                      --no-eff-email \
                                      -d "${unique_name}.${public_domain}"
        Type=oneshot
        RemainAfterExit=true
        [Install]
        WantedBy=multi-user.target
    - name: nginx.service
      enable: true
      contents: |
        [Unit]
        Description=nginx
        After=rancher.service letsencrypt.service
        Requires=rancher.service letsencrypt.service
        [Service]
        StartLimitInterval=0
        ExecStartPre=/usr/bin/docker pull nginx:latest
        ExecStart=/usr/bin/docker run --rm \
                                      --name nginx \
                                      --volume "/etc/letsencrypt/live/${unique_name}.${public_domain}/fullchain.pem:/certs/fullchain.pem" \
                                      --volume "/etc/letsencrypt/live/${unique_name}.${public_domain}/privkey.pem:/certs/privkey.pem" \
                                      --volume /etc/rancher_nginx.conf:/etc/nginx/conf.d/default.conf:ro \
                                      -p 80:80 \
                                      -p 443:443 \
                                      --link=rancher \
                                      nginx:latest
        ExecStop=/usr/bin/docker stop nginx
        Restart=always
        RestartSec=10
        Type=simple
        [Install]
        WantedBy=multi-user.target
    - name: letsencrypt-renew.service
      enable: true
      contents: |
        [Unit]
        Description=lets encrypt renew
        [Service]
        ExecStart=/usr/bin/docker run --rm --name letsencrypt \
                                      -v "/root/letsencrypt/log:/var/log/letsencrypt" \
                                      -v "/etc/letsencrypt:/etc/letsencrypt" \
                                      -v "/root/letsencrypt/lib:/var/lib/letsencrypt" \
                                      certbot/dns-route53 \
                                      renew \
                                      --agree-tos \
                                      --dns-route53 \
                                      --no-eff-email
        Type=oneshot
        RemainAfterExit=true
        ExecStartPost=systemctl restart nginx
        [Install]
        WantedBy=multi-user.target
    - name: letsencrypt-renew.timer
      enable: true
      contents: |
        [Unit]
        Description=Run letsencrypt-renew.service every Sunday at 11pm
        [Timer]
        OnCalendar=Sun *-*-* 23:00:00
storage:
  files:
    - path: /etc/hostname
      filesystem: root
      mode: 420
      contents:
        inline: rancher
    - path: /opt/bin/format-ebs.sh
      filesystem: root
      mode: 0755
      contents:
        inline: |
          #!/bin/bash
          device=$(lsblk | tail -n1 | awk '{print "/dev/"$1}')
          # Exit if it's already formated
          blkid -s TYPE -o value $device |grep ext4 > /dev/null && echo $device already formated || mkfs -t ext4 -L rancher $device
    - path: /etc/rancher_nginx.conf
      filesystem: root
      mode: 0644
      contents:
        inline: |
          upstream rancher {
            server rancher:80;
          }

          map $http_upgrade $connection_upgrade {
            default Upgrade;
            ''      close;
          }

          server {
            listen 443 ssl http2;
            server_name "${unique_name}.${public_domain}";
            ssl_certificate /certs/fullchain.pem;
            ssl_certificate_key /certs/privkey.pem;

            location / {
              proxy_set_header Host $host;
              proxy_set_header X-Forwarded-Proto $scheme;
              proxy_set_header X-Forwarded-Port $server_port;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_pass http://rancher;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection $connection_upgrade;
              # This allows the ability for the execute shell window to remain open for up to 15 minutes. Without this parameter, the default is 1 minute and will automatically close.
              proxy_read_timeout 900s;
            }
          }

          server {
              listen 80;
              server_name "${unique_name}.${public_domain}";
              return 301 https://$server_name$request_uri;
          }